1. Extract Method: To help resolve some duplicate code in the startmenu class, we extracted a method that the other methods that had the duplication can use. (the display_options() method)
2. self encapsulate field: Some methods were accessing fields directly in classes, so we had to encapsuate those values and use getter methods to follow OOP principles.
3. Pull up method: When creating the different block figures classes, some of the classes had duplicate methods, so we used this refactoring pattern to put similar code in the superclass MakeFigure.
4. Extract Class: When classes have gotten too large and started to violate SRP, we have had to use this refactoring pattern many times throughout adding features to keep code clean. An example of us using this pattern was creating the Game class instead of running all our code in the main.